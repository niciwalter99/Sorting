function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "WinkelTest"};
	this.sidHashMap["WinkelTest"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "WinkelTest:2"};
	this.sidHashMap["WinkelTest:2"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "WinkelTest:32"};
	this.sidHashMap["WinkelTest:32"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "WinkelTest:6"};
	this.sidHashMap["WinkelTest:6"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<S4>"] = {sid: "WinkelTest:7"};
	this.sidHashMap["WinkelTest:7"] = {rtwname: "<S4>"};
	this.rtwnameHashMap["<S5>"] = {sid: "WinkelTest:9"};
	this.sidHashMap["WinkelTest:9"] = {rtwname: "<S5>"};
	this.rtwnameHashMap["<S6>"] = {sid: "WinkelTest:10"};
	this.sidHashMap["WinkelTest:10"] = {rtwname: "<S6>"};
	this.rtwnameHashMap["<S7>"] = {sid: "WinkelTest:11"};
	this.sidHashMap["WinkelTest:11"] = {rtwname: "<S7>"};
	this.rtwnameHashMap["<S8>"] = {sid: "WinkelTest:6:7"};
	this.sidHashMap["WinkelTest:6:7"] = {rtwname: "<S8>"};
	this.rtwnameHashMap["<S9>"] = {sid: "WinkelTest:6:8"};
	this.sidHashMap["WinkelTest:6:8"] = {rtwname: "<S9>"};
	this.rtwnameHashMap["<S10>"] = {sid: "WinkelTest:7:7"};
	this.sidHashMap["WinkelTest:7:7"] = {rtwname: "<S10>"};
	this.rtwnameHashMap["<S11>"] = {sid: "WinkelTest:7:8"};
	this.sidHashMap["WinkelTest:7:8"] = {rtwname: "<S11>"};
	this.rtwnameHashMap["<S12>"] = {sid: "WinkelTest:36"};
	this.sidHashMap["WinkelTest:36"] = {rtwname: "<S12>"};
	this.rtwnameHashMap["<S13>"] = {sid: "WinkelTest:38"};
	this.sidHashMap["WinkelTest:38"] = {rtwname: "<S13>"};
	this.rtwnameHashMap["<Root>/Analog-Digital-Wandlung Sampletime = 0.00002 s Wichtig! Für korrekte Winkelmessung nicht die Sampletime vergrößern Weitere Ports können hinzugefügt werden (Farbsensor, Sharp-Sensoren) Wichtig! Dieser Block ist sehr Rechenintensiv"] = {sid: "WinkelTest:1"};
	this.sidHashMap["WinkelTest:1"] = {rtwname: "<Root>/Analog-Digital-Wandlung Sampletime = 0.00002 s Wichtig! Für korrekte Winkelmessung nicht die Sampletime vergrößern Weitere Ports können hinzugefügt werden (Farbsensor, Sharp-Sensoren) Wichtig! Dieser Block ist sehr Rechenintensiv"};
	this.rtwnameHashMap["<Root>/Constant"] = {sid: "WinkelTest:48"};
	this.sidHashMap["WinkelTest:48"] = {rtwname: "<Root>/Constant"};
	this.rtwnameHashMap["<Root>/Drehrichtungsvorgabe für einen Motor"] = {sid: "WinkelTest:31"};
	this.sidHashMap["WinkelTest:31"] = {rtwname: "<Root>/Drehrichtungsvorgabe für einen Motor"};
	this.rtwnameHashMap["<Root>/Messung des absoluten Winkels -  Auswertung der Encodersignale"] = {sid: "WinkelTest:2"};
	this.sidHashMap["WinkelTest:2"] = {rtwname: "<Root>/Messung des absoluten Winkels -  Auswertung der Encodersignale"};
	this.rtwnameHashMap["<Root>/P-Regler mit Regelfehler Begrenzung Initial: k = 0.1, limiit = +//- 100 Sampletime 0.01"] = {sid: "WinkelTest:32"};
	this.sidHashMap["WinkelTest:32"] = {rtwname: "<Root>/P-Regler mit Regelfehler Begrenzung Initial: k = 0.1, limiit = +//- 100 Sampletime 0.01"};
	this.rtwnameHashMap["<Root>/PWM Vorgabe für einen Motor "] = {sid: "WinkelTest:43"};
	this.sidHashMap["WinkelTest:43"] = {rtwname: "<Root>/PWM Vorgabe für einen Motor "};
	this.rtwnameHashMap["<Root>/Rate Transition4"] = {sid: "WinkelTest:28"};
	this.sidHashMap["WinkelTest:28"] = {rtwname: "<Root>/Rate Transition4"};
	this.rtwnameHashMap["<Root>/grüne LED3 auf dem µC gibt 1//0 codiert die Drehrichtung an"] = {sid: "WinkelTest:30"};
	this.sidHashMap["WinkelTest:30"] = {rtwname: "<Root>/grüne LED3 auf dem µC gibt 1//0 codiert die Drehrichtung an"};
	this.rtwnameHashMap["<S1>/Encoder Signal 1"] = {sid: "WinkelTest:3"};
	this.sidHashMap["WinkelTest:3"] = {rtwname: "<S1>/Encoder Signal 1"};
	this.rtwnameHashMap["<S1>/Encoder Signal 2"] = {sid: "WinkelTest:4"};
	this.sidHashMap["WinkelTest:4"] = {rtwname: "<S1>/Encoder Signal 2"};
	this.rtwnameHashMap["<S1>/Constant"] = {sid: "WinkelTest:5"};
	this.sidHashMap["WinkelTest:5"] = {rtwname: "<S1>/Constant"};
	this.rtwnameHashMap["<S1>/Edge Detector1"] = {sid: "WinkelTest:6"};
	this.sidHashMap["WinkelTest:6"] = {rtwname: "<S1>/Edge Detector1"};
	this.rtwnameHashMap["<S1>/Edge Detector2"] = {sid: "WinkelTest:7"};
	this.sidHashMap["WinkelTest:7"] = {rtwname: "<S1>/Edge Detector2"};
	this.rtwnameHashMap["<S1>/Heuristisch ermittelter Schwellwert"] = {sid: "WinkelTest:8"};
	this.sidHashMap["WinkelTest:8"] = {rtwname: "<S1>/Heuristisch ermittelter Schwellwert"};
	this.rtwnameHashMap["<S1>/MATLAB Function1"] = {sid: "WinkelTest:9"};
	this.sidHashMap["WinkelTest:9"] = {rtwname: "<S1>/MATLAB Function1"};
	this.rtwnameHashMap["<S1>/MATLAB Function2"] = {sid: "WinkelTest:10"};
	this.sidHashMap["WinkelTest:10"] = {rtwname: "<S1>/MATLAB Function2"};
	this.rtwnameHashMap["<S1>/MATLAB Function3"] = {sid: "WinkelTest:11"};
	this.sidHashMap["WinkelTest:11"] = {rtwname: "<S1>/MATLAB Function3"};
	this.rtwnameHashMap["<S1>/Product"] = {sid: "WinkelTest:12"};
	this.sidHashMap["WinkelTest:12"] = {rtwname: "<S1>/Product"};
	this.rtwnameHashMap["<S1>/Product1"] = {sid: "WinkelTest:13"};
	this.sidHashMap["WinkelTest:13"] = {rtwname: "<S1>/Product1"};
	this.rtwnameHashMap["<S1>/Product2"] = {sid: "WinkelTest:14"};
	this.sidHashMap["WinkelTest:14"] = {rtwname: "<S1>/Product2"};
	this.rtwnameHashMap["<S1>/Product3"] = {sid: "WinkelTest:15"};
	this.sidHashMap["WinkelTest:15"] = {rtwname: "<S1>/Product3"};
	this.rtwnameHashMap["<S1>/Sum"] = {sid: "WinkelTest:16"};
	this.sidHashMap["WinkelTest:16"] = {rtwname: "<S1>/Sum"};
	this.rtwnameHashMap["<S1>/Unit Delay1"] = {sid: "WinkelTest:17"};
	this.sidHashMap["WinkelTest:17"] = {rtwname: "<S1>/Unit Delay1"};
	this.rtwnameHashMap["<S1>/Unit Delay2"] = {sid: "WinkelTest:18"};
	this.sidHashMap["WinkelTest:18"] = {rtwname: "<S1>/Unit Delay2"};
	this.rtwnameHashMap["<S1>/Unit Delay3"] = {sid: "WinkelTest:19"};
	this.sidHashMap["WinkelTest:19"] = {rtwname: "<S1>/Unit Delay3"};
	this.rtwnameHashMap["<S1>/Unit Delay4"] = {sid: "WinkelTest:20"};
	this.sidHashMap["WinkelTest:20"] = {rtwname: "<S1>/Unit Delay4"};
	this.rtwnameHashMap["<S1>/Unit Delay5"] = {sid: "WinkelTest:21"};
	this.sidHashMap["WinkelTest:21"] = {rtwname: "<S1>/Unit Delay5"};
	this.rtwnameHashMap["<S1>/Vergleich mit  Schwellwert"] = {sid: "WinkelTest:22"};
	this.sidHashMap["WinkelTest:22"] = {rtwname: "<S1>/Vergleich mit  Schwellwert"};
	this.rtwnameHashMap["<S1>/Vergleich mit Schwellwert"] = {sid: "WinkelTest:23"};
	this.sidHashMap["WinkelTest:23"] = {rtwname: "<S1>/Vergleich mit Schwellwert"};
	this.rtwnameHashMap["<S1>/Winkel // Flanke Polulo 34:1 6V | 0,22 Polulo 74:1 6V | 0,1 Polulo 98:1 6V | 0,076 Polulo 171:1 6V | 0,043"] = {sid: "WinkelTest:24"};
	this.sidHashMap["WinkelTest:24"] = {rtwname: "<S1>/Winkel // Flanke Polulo 34:1 6V | 0,22 Polulo 74:1 6V | 0,1 Polulo 98:1 6V | 0,076 Polulo 171:1 6V | 0,043"};
	this.rtwnameHashMap["<S1>/Winkel // Flanke Polulo 34:1 6V | 0,22 Polulo 74:1 6V | 0,1 Polulo 98:1 6V | 0,076 Polulo 171:1 6V | 0,1"] = {sid: "WinkelTest:25"};
	this.sidHashMap["WinkelTest:25"] = {rtwname: "<S1>/Winkel // Flanke Polulo 34:1 6V | 0,22 Polulo 74:1 6V | 0,1 Polulo 98:1 6V | 0,076 Polulo 171:1 6V | 0,1"};
	this.rtwnameHashMap["<S1>/Aktueller Winkel  (absolut)"] = {sid: "WinkelTest:26"};
	this.sidHashMap["WinkelTest:26"] = {rtwname: "<S1>/Aktueller Winkel  (absolut)"};
	this.rtwnameHashMap["<S1>/Drehrichtung"] = {sid: "WinkelTest:27"};
	this.sidHashMap["WinkelTest:27"] = {rtwname: "<S1>/Drehrichtung"};
	this.rtwnameHashMap["<S2>/y_ist"] = {sid: "WinkelTest:33"};
	this.sidHashMap["WinkelTest:33"] = {rtwname: "<S2>/y_ist"};
	this.rtwnameHashMap["<S2>/y_soll"] = {sid: "WinkelTest:34"};
	this.sidHashMap["WinkelTest:34"] = {rtwname: "<S2>/y_soll"};
	this.rtwnameHashMap["<S2>/Abs"] = {sid: "WinkelTest:35"};
	this.sidHashMap["WinkelTest:35"] = {rtwname: "<S2>/Abs"};
	this.rtwnameHashMap["<S2>/Betrag"] = {sid: "WinkelTest:36"};
	this.sidHashMap["WinkelTest:36"] = {rtwname: "<S2>/Betrag"};
	this.rtwnameHashMap["<S2>/Dead Zone"] = {sid: "WinkelTest:37"};
	this.sidHashMap["WinkelTest:37"] = {rtwname: "<S2>/Dead Zone"};
	this.rtwnameHashMap["<S2>/Richtung"] = {sid: "WinkelTest:38"};
	this.sidHashMap["WinkelTest:38"] = {rtwname: "<S2>/Richtung"};
	this.rtwnameHashMap["<S2>/Sum"] = {sid: "WinkelTest:39"};
	this.sidHashMap["WinkelTest:39"] = {rtwname: "<S2>/Sum"};
	this.rtwnameHashMap["<S2>/Verstaerkung"] = {sid: "WinkelTest:40"};
	this.sidHashMap["WinkelTest:40"] = {rtwname: "<S2>/Verstaerkung"};
	this.rtwnameHashMap["<S2>/pwm_out"] = {sid: "WinkelTest:41"};
	this.sidHashMap["WinkelTest:41"] = {rtwname: "<S2>/pwm_out"};
	this.rtwnameHashMap["<S2>/r//l_out"] = {sid: "WinkelTest:42"};
	this.sidHashMap["WinkelTest:42"] = {rtwname: "<S2>/r//l_out"};
	this.rtwnameHashMap["<S3>/In"] = {sid: "WinkelTest:6:1"};
	this.sidHashMap["WinkelTest:6:1"] = {rtwname: "<S3>/In"};
	this.rtwnameHashMap["<S3>/Constant1"] = {sid: "WinkelTest:6:2"};
	this.sidHashMap["WinkelTest:6:2"] = {rtwname: "<S3>/Constant1"};
	this.rtwnameHashMap["<S3>/Demux"] = {sid: "WinkelTest:6:3"};
	this.sidHashMap["WinkelTest:6:3"] = {rtwname: "<S3>/Demux"};
	this.rtwnameHashMap["<S3>/Logical Operator1"] = {sid: "WinkelTest:6:4"};
	this.sidHashMap["WinkelTest:6:4"] = {rtwname: "<S3>/Logical Operator1"};
	this.rtwnameHashMap["<S3>/Memory"] = {sid: "WinkelTest:6:5"};
	this.sidHashMap["WinkelTest:6:5"] = {rtwname: "<S3>/Memory"};
	this.rtwnameHashMap["<S3>/Multiport Switch"] = {sid: "WinkelTest:6:6"};
	this.sidHashMap["WinkelTest:6:6"] = {rtwname: "<S3>/Multiport Switch"};
	this.rtwnameHashMap["<S3>/NEGATIVE Edge"] = {sid: "WinkelTest:6:7"};
	this.sidHashMap["WinkelTest:6:7"] = {rtwname: "<S3>/NEGATIVE Edge"};
	this.rtwnameHashMap["<S3>/POSITIVE Edge"] = {sid: "WinkelTest:6:8"};
	this.sidHashMap["WinkelTest:6:8"] = {rtwname: "<S3>/POSITIVE Edge"};
	this.rtwnameHashMap["<S3>/either edge"] = {sid: "WinkelTest:6:9"};
	this.sidHashMap["WinkelTest:6:9"] = {rtwname: "<S3>/either edge"};
	this.rtwnameHashMap["<S3>/neg. edge"] = {sid: "WinkelTest:6:10"};
	this.sidHashMap["WinkelTest:6:10"] = {rtwname: "<S3>/neg. edge"};
	this.rtwnameHashMap["<S3>/pos. edge"] = {sid: "WinkelTest:6:11"};
	this.sidHashMap["WinkelTest:6:11"] = {rtwname: "<S3>/pos. edge"};
	this.rtwnameHashMap["<S3>/Out"] = {sid: "WinkelTest:6:12"};
	this.sidHashMap["WinkelTest:6:12"] = {rtwname: "<S3>/Out"};
	this.rtwnameHashMap["<S4>/In"] = {sid: "WinkelTest:7:1"};
	this.sidHashMap["WinkelTest:7:1"] = {rtwname: "<S4>/In"};
	this.rtwnameHashMap["<S4>/Constant1"] = {sid: "WinkelTest:7:2"};
	this.sidHashMap["WinkelTest:7:2"] = {rtwname: "<S4>/Constant1"};
	this.rtwnameHashMap["<S4>/Demux"] = {sid: "WinkelTest:7:3"};
	this.sidHashMap["WinkelTest:7:3"] = {rtwname: "<S4>/Demux"};
	this.rtwnameHashMap["<S4>/Logical Operator1"] = {sid: "WinkelTest:7:4"};
	this.sidHashMap["WinkelTest:7:4"] = {rtwname: "<S4>/Logical Operator1"};
	this.rtwnameHashMap["<S4>/Memory"] = {sid: "WinkelTest:7:5"};
	this.sidHashMap["WinkelTest:7:5"] = {rtwname: "<S4>/Memory"};
	this.rtwnameHashMap["<S4>/Multiport Switch"] = {sid: "WinkelTest:7:6"};
	this.sidHashMap["WinkelTest:7:6"] = {rtwname: "<S4>/Multiport Switch"};
	this.rtwnameHashMap["<S4>/NEGATIVE Edge"] = {sid: "WinkelTest:7:7"};
	this.sidHashMap["WinkelTest:7:7"] = {rtwname: "<S4>/NEGATIVE Edge"};
	this.rtwnameHashMap["<S4>/POSITIVE Edge"] = {sid: "WinkelTest:7:8"};
	this.sidHashMap["WinkelTest:7:8"] = {rtwname: "<S4>/POSITIVE Edge"};
	this.rtwnameHashMap["<S4>/either edge"] = {sid: "WinkelTest:7:9"};
	this.sidHashMap["WinkelTest:7:9"] = {rtwname: "<S4>/either edge"};
	this.rtwnameHashMap["<S4>/neg. edge"] = {sid: "WinkelTest:7:10"};
	this.sidHashMap["WinkelTest:7:10"] = {rtwname: "<S4>/neg. edge"};
	this.rtwnameHashMap["<S4>/pos. edge"] = {sid: "WinkelTest:7:11"};
	this.sidHashMap["WinkelTest:7:11"] = {rtwname: "<S4>/pos. edge"};
	this.rtwnameHashMap["<S4>/Out"] = {sid: "WinkelTest:7:12"};
	this.sidHashMap["WinkelTest:7:12"] = {rtwname: "<S4>/Out"};
	this.rtwnameHashMap["<S5>:1"] = {sid: "WinkelTest:9:1"};
	this.sidHashMap["WinkelTest:9:1"] = {rtwname: "<S5>:1"};
	this.rtwnameHashMap["<S6>:1"] = {sid: "WinkelTest:10:1"};
	this.sidHashMap["WinkelTest:10:1"] = {rtwname: "<S6>:1"};
	this.rtwnameHashMap["<S7>:1"] = {sid: "WinkelTest:11:1"};
	this.sidHashMap["WinkelTest:11:1"] = {rtwname: "<S7>:1"};
	this.rtwnameHashMap["<S8>/IN"] = {sid: "WinkelTest:6:18"};
	this.sidHashMap["WinkelTest:6:18"] = {rtwname: "<S8>/IN"};
	this.rtwnameHashMap["<S8>/IN previous"] = {sid: "WinkelTest:6:19"};
	this.sidHashMap["WinkelTest:6:19"] = {rtwname: "<S8>/IN previous"};
	this.rtwnameHashMap["<S8>/Enable"] = {sid: "WinkelTest:6:20"};
	this.sidHashMap["WinkelTest:6:20"] = {rtwname: "<S8>/Enable"};
	this.rtwnameHashMap["<S8>/Relational Operator1"] = {sid: "WinkelTest:6:21"};
	this.sidHashMap["WinkelTest:6:21"] = {rtwname: "<S8>/Relational Operator1"};
	this.rtwnameHashMap["<S8>/OUT"] = {sid: "WinkelTest:6:22"};
	this.sidHashMap["WinkelTest:6:22"] = {rtwname: "<S8>/OUT"};
	this.rtwnameHashMap["<S9>/IN"] = {sid: "WinkelTest:6:13"};
	this.sidHashMap["WinkelTest:6:13"] = {rtwname: "<S9>/IN"};
	this.rtwnameHashMap["<S9>/IN previous"] = {sid: "WinkelTest:6:14"};
	this.sidHashMap["WinkelTest:6:14"] = {rtwname: "<S9>/IN previous"};
	this.rtwnameHashMap["<S9>/Enable"] = {sid: "WinkelTest:6:15"};
	this.sidHashMap["WinkelTest:6:15"] = {rtwname: "<S9>/Enable"};
	this.rtwnameHashMap["<S9>/Relational Operator1"] = {sid: "WinkelTest:6:16"};
	this.sidHashMap["WinkelTest:6:16"] = {rtwname: "<S9>/Relational Operator1"};
	this.rtwnameHashMap["<S9>/OUT"] = {sid: "WinkelTest:6:17"};
	this.sidHashMap["WinkelTest:6:17"] = {rtwname: "<S9>/OUT"};
	this.rtwnameHashMap["<S10>/IN"] = {sid: "WinkelTest:7:18"};
	this.sidHashMap["WinkelTest:7:18"] = {rtwname: "<S10>/IN"};
	this.rtwnameHashMap["<S10>/IN previous"] = {sid: "WinkelTest:7:19"};
	this.sidHashMap["WinkelTest:7:19"] = {rtwname: "<S10>/IN previous"};
	this.rtwnameHashMap["<S10>/Enable"] = {sid: "WinkelTest:7:20"};
	this.sidHashMap["WinkelTest:7:20"] = {rtwname: "<S10>/Enable"};
	this.rtwnameHashMap["<S10>/Relational Operator1"] = {sid: "WinkelTest:7:21"};
	this.sidHashMap["WinkelTest:7:21"] = {rtwname: "<S10>/Relational Operator1"};
	this.rtwnameHashMap["<S10>/OUT"] = {sid: "WinkelTest:7:22"};
	this.sidHashMap["WinkelTest:7:22"] = {rtwname: "<S10>/OUT"};
	this.rtwnameHashMap["<S11>/IN"] = {sid: "WinkelTest:7:13"};
	this.sidHashMap["WinkelTest:7:13"] = {rtwname: "<S11>/IN"};
	this.rtwnameHashMap["<S11>/IN previous"] = {sid: "WinkelTest:7:14"};
	this.sidHashMap["WinkelTest:7:14"] = {rtwname: "<S11>/IN previous"};
	this.rtwnameHashMap["<S11>/Enable"] = {sid: "WinkelTest:7:15"};
	this.sidHashMap["WinkelTest:7:15"] = {rtwname: "<S11>/Enable"};
	this.rtwnameHashMap["<S11>/Relational Operator1"] = {sid: "WinkelTest:7:16"};
	this.sidHashMap["WinkelTest:7:16"] = {rtwname: "<S11>/Relational Operator1"};
	this.rtwnameHashMap["<S11>/OUT"] = {sid: "WinkelTest:7:17"};
	this.sidHashMap["WinkelTest:7:17"] = {rtwname: "<S11>/OUT"};
	this.rtwnameHashMap["<S12>:1"] = {sid: "WinkelTest:36:1"};
	this.sidHashMap["WinkelTest:36:1"] = {rtwname: "<S12>:1"};
	this.rtwnameHashMap["<S13>:1"] = {sid: "WinkelTest:38:1"};
	this.sidHashMap["WinkelTest:38:1"] = {rtwname: "<S13>:1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
